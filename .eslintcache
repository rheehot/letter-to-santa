[{"/Users/suhdonghwi/Documents/projects/letter-to-santa/src/index.tsx":"1","/Users/suhdonghwi/Documents/projects/letter-to-santa/src/pages/HomePage.tsx":"2","/Users/suhdonghwi/Documents/projects/letter-to-santa/src/reportWebVitals.ts":"3","/Users/suhdonghwi/Documents/projects/letter-to-santa/src/routes/index.tsx":"4","/Users/suhdonghwi/Documents/projects/letter-to-santa/src/pages/GeneratePage.tsx":"5","/Users/suhdonghwi/Documents/projects/letter-to-santa/src/pages/LetterPage.tsx":"6"},{"size":957,"mtime":1608384496152,"results":"7","hashOfConfig":"8"},{"size":1562,"mtime":1608378308169,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1608370283739,"results":"10","hashOfConfig":"8"},{"size":582,"mtime":1608387956754,"results":"11","hashOfConfig":"8"},{"size":4277,"mtime":1608387482293,"results":"12","hashOfConfig":"8"},{"size":3557,"mtime":1608389807108,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fakstz",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/Users/suhdonghwi/Documents/projects/letter-to-santa/src/index.tsx",[],"/Users/suhdonghwi/Documents/projects/letter-to-santa/src/pages/HomePage.tsx",[],"/Users/suhdonghwi/Documents/projects/letter-to-santa/src/reportWebVitals.ts",[],"/Users/suhdonghwi/Documents/projects/letter-to-santa/src/routes/index.tsx",[],"/Users/suhdonghwi/Documents/projects/letter-to-santa/src/pages/GeneratePage.tsx",[],"/Users/suhdonghwi/Documents/projects/letter-to-santa/src/pages/LetterPage.tsx",["27"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { RouteComponentProps, useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nconst Main = styled.main`\n  min-height: 100%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  padding: 3rem 2rem;\n  box-sizing: border-box;\n`;\n\nconst LoadingText = styled.p`\n  font-size: 1.5rem;\n`;\n\nconst Title = styled.h1`\n  font-family: \"NanumBarunpen\";\n  font-size: 3rem;\n  color: #212529;\n\n  margin: 0.5rem 0;\n\n  @media screen and (max-width: 560px) {\n    font-size: 1.7rem;\n  }\n`;\n\nconst Description = styled.p`\n  font-family: \"NanumBarunpen\";\n  font-size: 1.4rem;\n\n  color: #868e96;\n  max-width: 40rem;\n  margin: 2rem 0 3rem 0;\n\n  @media screen and (max-width: 560px) {\n    font-size: 1rem;\n    margin: 1.5rem 0 3rem 0;\n  }\n`;\n\nconst Form = styled.div`\n  width: 30rem;\n\n  @media screen and (max-width: 560px) {\n    width: 20rem;\n  }\n\n  @media screen and (max-width: 350px) {\n    width: 16rem;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n\n  font-family: \"NanumBarunpen\";\n  color: #212529;\n  font-size: 1.1rem;\n\n  margin-bottom: 0.5rem;\n`;\n\nconst LetterInput = styled.textarea`\n  background-color: #f1f3f5;\n  border: none;\n  border-radius: 10px;\n\n  font-family: \"NanumBarunpen\";\n  font-size: 1.2rem;\n  padding: 1rem;\n\n  width: 100%;\n  box-sizing: border-box;\n\n  margin-bottom: 2rem;\n  resize: vertical;\n  outline: none;\n`;\n\nconst YesNo = styled.div`\n  display: flex;\n  margin-top: 1rem;\n`;\n\nconst YesNoButton = styled.button<{ color: string }>`\n  cursor: pointer;\n  outline: none;\n\n  flex: 1;\n\n  background-color: ${(props) => props.color};\n  appearance: none;\n\n  padding: 0.5rem 0;\n  color: white;\n\n  font-family: \"NanumBarunpen\";\n  font-size: 1.2rem;\n\n  border: none;\n  border-radius: 10px;\n\n  margin: 0 0.5rem;\n`;\n\nexport default function LetterPage({\n  match,\n}: RouteComponentProps<{ key: string }>) {\n  const [loading, setLoading] = useState(true);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const key = match.params.key;\n  const history = useHistory();\n\n  useEffect(() => {\n    async function fetch() {\n      const keySnapshot = await firebase.database().ref(\"data\").once(\"value\");\n      if (!keySnapshot.hasChild(key)) {\n        history.push(\"/\");\n        return;\n      }\n\n      const dataSnapshot = await firebase\n        .database()\n        .ref(`data/${key}`)\n        .once(\"value\");\n      const data = dataSnapshot.val();\n\n      setName(data.name);\n      setEmail(data.email);\n      setLoading(false);\n    }\n\n    fetch();\n  });\n\n  return (\n    <Main>\n      {loading ? (\n        <LoadingText>로딩중 ...</LoadingText>\n      ) : (\n        <>\n          <Title>산타 할아버지께 편지 🎄</Title>\n          <Description>\n            {name} 친구! 올해는 산타 할아버지께 어떤 선물을 받고 싶나요? 산타\n            할아버지께 쓰고 싶은 말과 함께 적어보아요! 정성스럽게 적을수록 산타\n            할아버지께서 좋아하실 거예요!\n          </Description>\n          <Form>\n            <Label htmlFor=\"letter\">편지 내용</Label>\n            <LetterInput name=\"letter\" rows={13} />\n            <Label>올해 정말 착하게 살았나요?</Label>\n            <YesNo>\n              <YesNoButton color=\"#20c997\">네!</YesNoButton>\n              <YesNoButton color=\"#ff6b6b\">아니요..</YesNoButton>\n            </YesNo>\n          </Form>\n        </>\n      )}\n    </Main>\n  );\n}\n",{"ruleId":"28","severity":1,"message":"29","line":119,"column":10,"nodeType":"30","messageId":"31","endLine":119,"endColumn":15},"@typescript-eslint/no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar"]